---
- name: capture generated root password from mysqld logs (from first start)
  command: >-
    perl -0777 -ne 'print "$&\n" if /(?<=password is generated for root\@localhost: ).+/' /var/log/mysqld.log
  args:
    creates: ~root/.my.cnf
  register: start_password
  when: percona_version >= 57

- stat:
    path: ~root/.my.cnf
  register: root_my_cnf

- set_fact:
    mycnf_start_root_opts:
      user: root
      password: "{{ start_password.stdout }}"
  when: not root_my_cnf.stat.exists and percona_version >= 57

- name: Override root password when a data directory exists on install
  set_fact:
    mycnf_start_root_opts:
      user: root
      password: "{{ mysqld_default_root_password }}"
  when: mysqld_existing_datadir and (mysqld_default_root_password is defined) and (mysqld_default_root_password|length > 0)

- name: initial creation of ~root/.my.cnf after mysqld install
  ini_file:
    dest: ~root/.my.cnf
    mode: "600"
    section: client
    option: "{{ item.key }}"
    value: "'{{ item.value }}'"
  with_dict: "{{ mycnf_start_root_opts }}"
  # when .my.cnf does not exist and (Percona 5.7+ or (a previously existing install and default password exist))
  when: not root_my_cnf.stat.exists and ( percona_version >= 57 or (mysqld_existing_datadir and (mysqld_default_root_password is defined) and (mysqld_default_root_password|length > 0)) )

- name: Install pwgen
  package:
    name: pwgen
    state: present

- name: generate password
  command: >
    pwgen -cnys -r "\"'\!#\`=\$" 32 1
  register: result
  when: not root_my_cnf.stat.exists

- set_fact:
    mycnf_root_opts:
      user: root
      password: "{{ result.stdout }}"
  when: result.changed

- name: Override root password when a default password is set
  set_fact:
    mycnf_root_opts:
      user: root
      password: "{{ mysqld_default_root_password }}"
  when: (mysqld_default_root_password is defined) and (mysqld_default_root_password|length > 0)

- name: set mysql root localhost user password (socket connections)
  command: mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('{{ mycnf_root_opts.password }}');"
  when: result.changed and percona_version < 57
  
- name: set mysql root localhost user password (socket connections)
  command: mysql --connect-expired-password -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mycnf_root_opts.password }}';"
  when: result.changed and percona_version >= 57



- name: update ~root/.my.cnf
  ini_file:
    dest: ~root/.my.cnf
    mode: "600"
    section: client
    option: "{{ item.key }}"
    value: "'{{ item.value }}'"
  with_dict: "{{ mycnf_root_opts }}"
  when: result.changed


# MySQL 5.6 specific permission initialization
- name: set mysql root 127.0.0.1 user password (tcp connections)
  command: mysql -e "SET PASSWORD FOR 'root'@'127.0.0.1' = PASSWORD('{{ mycnf_root_opts.password }}');"
  when: result.changed and percona_version < 57

- name: set mysql root ::1 user password (tcp connections)
  command: mysql -e "SET PASSWORD FOR 'root'@'::1' = PASSWORD('{{ mycnf_root_opts.password }}');"
  when: result.changed and percona_version < 57

- name: drop mysql anonymous localhost user
  command: mysql -e "DROP USER ''@'localhost';"
  when: result.changed and percona_version < 57 and not mysqld_existing_datadir

- name: get system hostname
  command: hostname
  register: local_hostname
  when: result.changed

- name: drop mysql anonymous {{ local_hostname.stdout }} user
  command: mysql -e "DROP USER ''@'{{ local_hostname.stdout }}';"
  when: result.changed and percona_version < 57 and not mysqld_existing_datadir

- name: drop mysql root {{ local_hostname.stdout }} user
  command: mysql -e "DROP USER 'root'@'{{ local_hostname.stdout }}';"
  when: result.changed and percona_version < 57 and not mysqld_existing_datadir

# MySQL 5.7 specific permission initialization
- name: set mysql root 127.0.0.1 user password (tcp connections)
  command: mysql -e "CREATE USER 'root'@'127.0.0.1' IDENTIFIED BY '{{ mycnf_root_opts.password }}';"
  when: result.changed and percona_version >= 57
- name: set mysql root 127.0.0.1 permissions (tcp connections)
  command: mysql -e "GRANT ALL ON *.* TO 'root'@'127.0.0.1' WITH GRANT OPTION;"
  when: result.changed and percona_version >= 57

- name: set mysql root ::1 user password (tcp connections)
  command: mysql -e "CREATE USER 'root'@'::1' IDENTIFIED BY '{{ mycnf_root_opts.password }}';"
  when: result.changed and percona_version >= 57
- name: set mysql root ::1 user password (tcp connections)
  command: mysql -e "GRANT ALL ON *.* TO 'root'@'::1' WITH GRANT OPTION;"
  when: result.changed and percona_version >= 57



