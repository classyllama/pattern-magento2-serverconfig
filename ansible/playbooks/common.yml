---
- name: Common
  hosts: all
  become: true

  vars_files:
    - ../vars/app_vars.default.yml

  tasks:
    
    # --- System Config Roles
    - ansible.builtin.import_role:
         name: classyllama.syseng-access
      tags: syseng-access
      when: use_classyllama_syseng_access | default(false)
    
    - ansible.builtin.import_role:
         name: classyllama.sshd-lockdown
      tags: ssh
      when: use_classyllama_sshd_lockdown | default(false)
    
    - ansible.builtin.import_role:
         name: classyllama.boilerplate
      tags: boilerplate
      when: use_classyllama_boilerplate | default(false)
    
    - ansible.builtin.import_role:
         name: classyllama.python
      tags: python
      when: use_classyllama_python | default(false)
    
    - ansible.builtin.import_role:
         name: classyllama.hostsfile
      tags: hostsfile
      when: use_classyllama_hostsfile | default(false)
    
    - ansible.builtin.import_role:
         name: kamaln7.swapfile
      tags: swapfile
      when: use_kamaln7_swapfile | default(false)
    
    - ansible.builtin.import_role:
         name: classyllama.timezone
      tags: timezone
      when: use_classyllama_timezone | default(false)
    
    - ansible.builtin.import_role:
         name: geerlingguy.repo-epel
      tags: epel
      when: use_geerlingguy_repo_epel | default(false)
    
    - ansible.builtin.import_role:
         name: classyllama.repo_ius
      tags: ius
      when: use_classyllama_repo_ius | default(false)
    
    
    
    # --- Cleanup default user
    - name: Remove the user 'centos'
      user:
        name: centos
        state: absent
        remove: yes
      when: use_remove_centos_user | default(false)
    
    # --- Common Tools
    - name: Common Software Packages
      package:
        name: 
          - wget
          - bc
          - rsync
          - yara
          - unzip
          - words
          - coreutils
    
    # EL7 Packages
    - name: Software Packages (EL7)
      package:
        name: 
          - yum-plugin-replace
      when:
        - ansible_os_family == 'RedHat'
        - ansible_distribution_major_version <= '7'
        - use_classyllama_repo_ius == true

    # --- Common Diagnostics Tools
    - name: Additional Diagnostics Tools
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - nmap-ncat
        - nmap
    
    
    
    # Yum update and reboot as needed
    - name: Check for initial_updated_all_yum_packages.flag
      stat:
        path: /root/initial_updated_all_yum_packages.flag
      register: stat_updated_all_yum_packages

    - name: Yum update and reboot as needed
      block:
    
        - name: upgrade all packages
          package:
            name: '*'
            state: latest
          tags: yum-update
    
        - name: check for reboot hint
          shell: if [ $(rpm -q --last kernel | awk 'NR==1 {print $1}') != kernel-$(uname -r) ]; then echo 'reboot'; else echo 'Kernel is current'; fi
          ignore_errors: true
          changed_when: false
          register: reboot_hint
          tags: yum-update
    
        - name: Rebooting ...
          shell: sleep 5 && shutdown -r now 'Rebooting (Yum Updates)'
          async: 1
          poll: 0
          ignore_errors: true
          changed_when: "reboot_hint.stdout == 'reboot'"
          register: rebooting
          tags: yum-update
          when: reboot_hint.stdout == 'reboot'

        - name: Wait for remote system to reboot...
          become: no
          wait_for_connection:
            delay: 60
          when: rebooting is changed
          tags: yum-update

        - name: Write flag file to disable future yum updates
          copy:
            content: ""
            dest: /root/initial_updated_all_yum_packages.flag
            force: no
            group: root
            owner: root
            mode: 0555
      
      when: (yum_update_and_reboot == "always") or (yum_update_and_reboot == "initial" and not stat_updated_all_yum_packages.stat.exists)
